type Query {
    users: [User]
    user(email: String!): User
    userCart(userId: ID!): [ItemCart]
    records(category: String!): [Record]
    recordsByOldestToNewest: [Record]
    recordsByNewestToOldest: [Record]
    record(id: ID!): Record
    newsletterEmails: [NewsletterEmail]
}

type Mutation {
    createNewsletterEmail(email: String!): NewsletterEmail!
    createRegularUser(email: String!, fullName: String!): User!
    addRecordToFavorites(userId: ID!, recordId: ID!): User!
    removeRecordFromFavorites(userId: ID!, recordId: ID!): User!
    addRecordToCart(userId: ID!, recordId: ID!): ItemCart!
    removeFromCart(userId: ID!, recordId: ID!): ItemCart!
    updateItemQuanityInCart(userId: ID!, cartItem: ID!, quantity: Int!): ItemCart!
    deleteItemFromCart(cartItem: ID!): ItemCart!
}

type User {
    _id: ID!
    fullName: String!
    email: String!
    favorites: [Record]
    imageUrl: String!
    cart: [ItemCart]
}

type Record {
    _id: ID!
    year: Int!
    name: String!
    label: String!
    creatorArtist: String!
    imageUrl: String!
    category: String!
    price: Int!
    description: String!
}

type ItemCart {
    _id: ID!
    record: Record!
    cutumer: User!
    quantity: Int!
}

type NewsletterEmail {
    _id: ID!
    email: String!
}