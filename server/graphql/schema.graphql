type Query {
    users: [User]
    user(id: ID!): User
    records: [Record]
    recordsByOldestToNewest: [Record]
    recordsByNewestToOldest: [Record]
    record(id: ID!): Record
    newsletterEmails: [NewsletterEmail]
}

type Mutation {
    createNewsletterEmail(email: String!): NewsletterEmail!
    createRegularUser(email: String!, fullName: String!): User!
}

type User {
    _id: ID!
    fullName: String!
    email: String!
    favorites: [Record]
    imageUrl: String!
    cart: [Record]
}

type Record {
    _id: ID!
    year: Int!
    name: String!
    label: String!
    creatorArtist: String!
    imageUrl: String!
    category: String!
    price: Int!,
    description: String!
}

type NewsletterEmail {
    _id: ID!
    email: String!
}